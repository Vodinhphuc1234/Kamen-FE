
          <div className={clsx(styles.Slide_operator_Content)}>
            <div className={clsx(styles.Slide_operator_question)}>
              <p>Content</p>
              <p>Question</p>
              <input type="text" />
              <div className={clsx(styles.Slide_operator_answer)}>
                <div className={clsx(styles.Slide_operatorAns_header)}>
                  <p>Options</p>
                  <Button>
                    <GrFormAdd color="white" size={20} />
                    Add Option
                  </Button>
                </div>
                <div className={clsx(styles.Slide_operatorAnswer_item)}>
                  <DragDropContext onDragEnd={handleOnDragEnd}>
                    <Droppable droppableId="characters">
                      {(provided) => (
                        <ul
                          className="characters"
                          {...provided.droppableProps}
                          ref={provided.innerRef}
                        >
                          {characters.map((item, index) => {
                            return (
                              <Draggable
                                key={item.id}
                                draggableId={item.id}
                                index={index}
                              >
                                {(provided) => (
                                  <li
                                    // key={provided.id}
                                    ref={provided.innerRef}
                                    {...provided.draggableProps}
                                    {...provided.dragHandleProps}
                                  >
                                    <div
                                      className={clsx(styles.dragAnswer_item)}
                                    >
                                      <MdOutlineDragIndicator />
                                      <input type="text" />
                                      <IoCloseOutline />
                                    </div>
                                  </li>
                                )}
                              </Draggable>
                            );
                          })}
                        </ul>
                      )}
                    </Droppable>
                  </DragDropContext>
                  {/* <button>hello</button> */}
                </div>
              </div>
            </div>
            <div className={clsx(styles.Slide_operator_layout)}>
              <p>Result layout</p>
              <div className={clsx(styles.Slide_operatorLayout_dropdown)}>
                <p>
                  <span>
                    <chartType.icon size={30} />
                  </span>
                  {chartType.name}
                </p>
                <Dropdown>
                  <Dropdown.Toggle as={CustomDropdown} />

                  <Dropdown.Menu className={clsx(styles.Slide_LayoutMenu)}>
                    {chartOptions.map((item) => (
                      <Dropdown.Item
                        onClick={() => {
                          console.log('Click');
                          setChartType(item);
                        }}
                        className={clsx(styles.Slide_LayoutItem)}
                        href="#/action-1"
                      >
                        <p>
                          <item.icon size={30} />
                          hello
                        </p>
                      </Dropdown.Item>
                    ))}
                  </Dropdown.Menu>
                </Dropdown>
              </div>
            </div>
          </div>